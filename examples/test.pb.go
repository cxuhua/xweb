// Code generated by protoc-gen-go.
// source: test.proto
// DO NOT EDIT!

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	test.proto

It has these top-level messages:
	Error
	MessageReq
	MessageRep
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 消息类型
type MessageType int32

const (
	// 未知
	MessageType_MT_NONE MessageType = 0
	// 推送
	MessageType_MT_PUSH MessageType = 1
	// 短信
	MessageType_MT_SMS MessageType = 2
)

var MessageType_name = map[int32]string{
	0: "MT_NONE",
	1: "MT_PUSH",
	2: "MT_SMS",
}
var MessageType_value = map[string]int32{
	"MT_NONE": 0,
	"MT_PUSH": 1,
	"MT_SMS":  2,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}
func (MessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Error struct {
	Code  int32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type MessageReq struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Count int32  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *MessageReq) Reset()                    { *m = MessageReq{} }
func (m *MessageReq) String() string            { return proto.CompactTextString(m) }
func (*MessageReq) ProtoMessage()               {}
func (*MessageReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type MessageRep struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Count int32  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *MessageRep) Reset()                    { *m = MessageRep{} }
func (m *MessageRep) String() string            { return proto.CompactTextString(m) }
func (*MessageRep) ProtoMessage()               {}
func (*MessageRep) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*Error)(nil), "main.Error")
	proto.RegisterType((*MessageReq)(nil), "main.MessageReq")
	proto.RegisterType((*MessageRep)(nil), "main.MessageRep")
	proto.RegisterEnum("main.MessageType", MessageType_name, MessageType_value)
}

func init() { proto.RegisterFile("test.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 177 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x49, 0x2d, 0x2e,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xc9, 0x4d, 0xcc, 0xcc, 0x53, 0x32, 0xe4, 0x62,
	0x75, 0x2d, 0x2a, 0xca, 0x2f, 0x12, 0x12, 0xe2, 0x62, 0x49, 0xce, 0x4f, 0x49, 0x95, 0x60, 0x54,
	0x60, 0xd4, 0x60, 0x0d, 0x02, 0xb3, 0x85, 0x44, 0xb8, 0x58, 0x53, 0x41, 0x92, 0x12, 0x4c, 0x0a,
	0x8c, 0x1a, 0x9c, 0x41, 0x10, 0x8e, 0x92, 0x11, 0x17, 0x97, 0x6f, 0x6a, 0x71, 0x71, 0x62, 0x7a,
	0x6a, 0x50, 0x6a, 0xa1, 0x10, 0x1f, 0x17, 0x53, 0x66, 0x0a, 0x58, 0x17, 0x67, 0x10, 0x53, 0x66,
	0x0a, 0x48, 0x4f, 0x72, 0x7e, 0x69, 0x5e, 0x09, 0x58, 0x0f, 0x6b, 0x10, 0x84, 0x83, 0xa2, 0xa7,
	0x80, 0x38, 0x3d, 0x5a, 0xc6, 0x5c, 0xdc, 0x50, 0x3d, 0x21, 0x95, 0x05, 0xa9, 0x42, 0xdc, 0x5c,
	0xec, 0xbe, 0x21, 0xf1, 0x7e, 0xfe, 0x7e, 0xae, 0x02, 0x0c, 0x50, 0x4e, 0x40, 0x68, 0xb0, 0x87,
	0x00, 0xa3, 0x10, 0x17, 0x17, 0x9b, 0x6f, 0x48, 0x7c, 0xb0, 0x6f, 0xb0, 0x00, 0x53, 0x12, 0x1b,
	0xd8, 0x73, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf1, 0x40, 0x6f, 0x84, 0xea, 0x00, 0x00,
	0x00,
}
